UIStackView
  열 또는 행에 View들의 묶음을 배치할 수 있는 간소화된 인터페이스
  스택뷰는 오토레이아웃을 이용하여 디바이스의 스크린 사이즈나 혹은 일어날 어떠한 변화에 맞춰서 동적인 UI를 구성할 수 있다. 
  복잡한 UI를 구성하는데 있어서 일일이 오토레이아웃 제약조건을 설정하면, 제약조건이 많아져 복잡해지기도 하고 관리하기도 힘들다. 원하는대로 UI구성이 되지 않는 경우도 많다.
  그런데 스택뷰를 사용하게 되면, 오토레이아웃 제약조건을 많이 설정하지 않아도 쉽게 UI구성이 가능하다.


  UIStackView Attribute
  스택뷰는 다양한 속성이 있다. 

  (1) Axis :  StackView의 방향을 결정(가로, 세로) 
  
  (2) Distribution : StackView 안에 들어가는 뷰들의 사이즈를 어떻게 분배할지 설정하는 속성
	  - Fill : 스택뷰의 방향에 따라 가능한 공간을 채우기 위해서 서브뷰들의 사이즈를 재조정한다.  
            서브뷰의 크기가 스택뷰 사이즈를 초과한다면, 각 뷰의 Compression Resistance Priority에 따라 각 뷰의 크기를 감소시킨다. 
            만약 서브 뷰들이 스택뷰의 사이즈에 미달한다면, 각 뷰의 hugging Priority에 따라 각 뷰의 크기를 증가시켜 스택뷰의 사이즈에 맞춘다.
	  - Fill Equally : 스택 뷰의 방향에 따라 서브 뷰들의 사이즈를 스택 뷰의 사이즈에 맞추는데, 모든 서브뷰들의 크기가 같게 한다.(나)
	  - Fill Proportionally : 스택뷰의 방향에 따라 서브 뷰가 가지고 있는 크기에 비례하여 공간을 차지하도록 만들어준다.
	  - Equal Spacing : 스택뷰의 방향에 따라 서브 뷰들의 사이의 공간을 균등하게 배치해 준다.
	  - Equal Centering : 스택 뷰의 방향에 따라 각 뷰의 중심 간의 거리를 동일하게 맞추는 옵션
    
  (3) Alignment : StackView의  subView 들을 어떤식으로 정렬할지 결정하는 속성
	  - Fill : 스택 뷰의 방향이 Horizontal일 경우, 아래 위 공간을 fill하기 위해 서브 뷰들을 위 아래로 늘리고, Vertical인 경우 좌우 공간을 fill하기 위해 서브뷰들을 좌우 늘린다.
	  - Leading : vertical 스택 뷰에서 서브뷰들이 스택 뷰의 Leading(왼쪽)에 맞춰 정렬한다.
	  - Top : horizontal 스택 뷰에서 서브뷰들이 위로 정렬된다.
	  - First Baseline: horizontal 스택뷰에서 서브뷰들의 first baseline에 맞춰 스택뷰가 서브뷰들을 정렬한다.
	  - Center : 스택뷰에 방향에 따라 서브뷰들을 중심을 스택뷰의 중심에 맞춰 정렬
	  - Trailing : vertical 스택뷰에서 오른쪽에 맞춰 서브뷰들을 정렬한다.
	  - bottom :  horizontal 스택뷰에서 서브뷰들을 아래에 맞춰 정렬한다. 
	  - List Baseline	: Horizontal 스택뷰에서, 스택뷰가 서브뷰들의 last baseline에 맞춰 서브뷰들을 정렬한다. 
 
  (4) Spacing : Stack View 안에 들어가는 뷰들의 간격을 조정하는 속성
