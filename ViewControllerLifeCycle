ViewController Life Cycle

  UIViewController 객체에는 View객체들을 관리하는 메서드들이 정의되어 있다.
  이 메서드들은 iOS 시스템에 의해 불려져야할 타이밍에 자동 호출된다.
  UIViewContoller의 하위 클래스를 생성할 때(즉, 생성한 클래스 UIViewController를 상속받는 경우), 
  UIViewController에 정의된 이 메서드들을 오버라이드하여 Life Cycle 상황에 맞게 적절한 로직들을 메서드에 추가할 수 있다. 

  뷰가 보여지는 상황 분류 (총 4가지)
    - Appearing : 뷰가 화면에 나타나는 중
    - Appeared : 뷰가 화면에 나타나는게 완료된 상태
    - DisAppearing : 뷰가 화면에서 사라지는 중
    - Disappeared : 뷰가 화면에서 사라진 상태


  UIViewContoller는 뷰가 보여지는 상태변화에 따라 시스템이 호출하는 Life Cycle 메서드가 다르다.
  호출 순서
  1. viewDidLoad() → 2. viewWillAppear → 3. viewDidAppear → 4. viewWillDisappear → 5. viewDidDisappear

    (1)viewDidLoad()
	    - 뷰 컨트롤러의 모든 뷰들이 메모리에 로드됐을 때 호출
	    - 메모리에 처음 로드될 때 한 번만 호출
	    - 보통 딱 한 번 호출될 행위들을 이 메서드 안에 정의한다.
	    - 뷰와 관련된 추가적인 초기화 작업, 네트워크 호출과 같은 1회성 작업
      
    +화면 전환 후 다시 돌아올 때 viewDidLoad가 호출되지 않는 이유 : root ViewController가 이미 메모리에 Load 되었기 때문에 이전화면으로 돌아왔을 때는 ViewDidLoad가 호출되지 않는다.
    +A화면서 B화면 전환, 그 후 다시 A로 돌아오면 ViewDidLoad 호출x, but B화면으로 다시 화면전환되면  ViewDidLoad가 호출된다. 
      왜일까? 새 화면에서 이전 화면으로 돌아가게 되면 새 화면의 viewController는 메모리에서 사라지게 된다. 따라서 B 화면으로 전환 시 메모리에 Load했기 때문에 ViewDidLoad메서드가 호출된다.


    (2) viewWillAppear()
	    - 뷰가 뷰 계층에 추가되고, 화면에 보이기 직전 매 번 호출 -> 다른 뷰로 이동했다가 돌아오면 재호출된다.
	    - 다른 뷰로 이동했다가 돌아오면 재호출
	    - 뷰와 관련된 추가적인 초기화 작업
	    - 애니메이션이 보여지기 전에 호출

    (3) viewDidAppear()
	    - 뷰 컨트롤러의 뷰가 뷰 계층에 추가된 후 호출된다.
	    - 뷰를 나타낼 때 필요한 추가 작업
	    - 애니메이션을 시작하는 작업

    (4) viewWillDisappear()
	  - 뷰 컨트롤러의 뷰가 뷰 계층에서 사라지기 전에 호출된다.
	  - 뷰가 생성된 뒤 작업한 내용을 되돌리는 작업
	  - 애니메이션이 구성되기 전에 호출된다.
	  - 최종적으로 데이터를 저장하는 작업
	  - 예) 뷰가 처음 보여졌을 때 viewDidAppear(_:)에서 작업된 변경사항을 되돌릴 때 사용

    (5) viewDidDisappr()
	  - 뷰 컨트롤러의 뷰가 뷰 계층에서 사라진 뒤에 호출.
	  - 뷰가 사라지는 것과 관련된 추가 작업

개발자들은 상황에 따라 적절한 메서드 안에 작업을 해야한다. 





